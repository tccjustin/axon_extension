{
  "name": "axon",
  "displayName": "Axon",
  "publisher": "justin-lee",
  "description": "A powerful VS Code extension for enhanced development experience",
  "version": "0.3.7",
  "extensionKind": ["ui","workspace"],
  "repository": {
    "type": "git",
    "url": "https://github.com/tccjustin/axon_extension.git"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
    "activationEvents": [
    "onCommand:axon.configureFwdnExe",
    "onCommand:axon.configureSettings",
    "onCommand:axon.FWDN_ALL",
    "onCommand:axon.mcuBuildMake",
    "onCommand:axon.configureProjectFolder",
    "onCommand:axon.configureBootFirmwareFolder",
    "onCommand:axon.buildAndCopyScripts",
    "onCommand:axon.createMcuStandaloneProject",
    "onCommand:axon.createYoctoProject",
    "onView:axonProjectView"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "axon.configureSettings",
        "title": "Configure Settings",
        "category": "Axon"
      },
      {
        "command": "axon.FWDN_ALL",
        "title": "FWDN",
        "category": "Axon"
      },
      {
        "command": "axon.mcuBuildMake",
        "title": "MCU Build Make",
        "category": "Axon"
      },
      {
        "command": "axon.configureProjectFolder",
        "title": "Configure Project Folder Name",
        "category": "Axon"
      },
      {
        "command": "axon.configureBootFirmwareFolder",
        "title": "Configure Boot Firmware Folder Name",
        "category": "Axon"
      },
      {
        "command": "axon.buildAndCopyScripts",
        "title": "Build and Copy Scripts",
        "category": "Axon"
      },
      {
        "command": "axon.createMcuStandaloneProject",
        "title": "Create MCU Standalone Project",
        "category": "Axon"
      },
      {
        "command": "axon.createYoctoProject",
        "title": "Create Yocto Project",
        "category": "Axon"
      }
    ],
    "views": {
      "axon": [
        {
          "id": "axonProjectView",
          "name": "Projects",
          "icon": "$(circuit-board)",
          "contextualTitle": "Axon Project Tools"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "axon",
          "title": "Axon",
          "icon": "$(circuit-board)"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "axon.createMcuStandaloneProject",
          "when": "view == axonProjectView",
          "group": "navigation"
        },
        {
          "command": "axon.createYoctoProject",
          "when": "view == axonProjectView",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Axon",
      "properties": {
        "axon.fwdn.exePath": {
          "type": "string",
          "default": "C:\\Users\\jhlee17\\work\\FWDN\\fwdn.exe",
          "description": "FWDN executable path"
        },
        "axon.buildAxonFolderName": {
          "type": "string",
          "default": "build-axon",
          "description": "Project folder name to search for"
        },
        "axon.bootFirmwareFolderName": {
          "type": "string",
          "default": "boot-firmware_tcn1000",
          "description": "Boot firmware folder name to search for"
        },
        "axon.git.executablePath": {
          "type": "string",
          "default": "git",
          "description": "Path to the Git executable. (No longer used, relies on built-in Git extension)"
        },
        "axon.west.executablePath": {
          "type": "string",
          "default": "west",
          "description": "Path to the west executable for Zephyr projects."
        }
      }
    },
    "taskDefinitions": [
      {
        "type": "axon-boot-firmware",
        "required": [],
        "properties": {
          "label": {
            "type": "string",
            "description": "Task label"
          }
        }
      },
      {
        "type": "axon-simple-fwdn",
        "required": [],
        "properties": {
          "label": {
            "type": "string",
            "description": "Task label"
          }
        }
      },
      {
        "type": "axon-mcu-build",
        "required": [],
        "properties": {
          "label": {
            "type": "string",
            "description": "Task label"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "precompile": "node -e \"try{const fs=require('fs'),crypto=require('crypto');const lock='package-lock.json';const nm='node_modules';const mark=nm+'/.depshash';if(!fs.existsSync(nm)||!fs.existsSync(lock)||!fs.existsSync(mark)){process.exit(1);}const h=crypto.createHash('sha256').update(fs.readFileSync(lock,'utf8')).digest('hex');process.exit(fs.readFileSync(mark,'utf8')===h?0:1);}catch(e){process.exit(1)}\" || (npm ci --prefer-offline --no-audit --progress=false && node -e \"const fs=require('fs'),crypto=require('crypto');const h=crypto.createHash('sha256').update(fs.readFileSync('package-lock.json','utf8')).digest('hex');fs.mkdirSync('node_modules',{recursive:true});fs.writeFileSync('node_modules/.depshash',h)\")",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "vsce package",
    "package:patch": "vsce package --patch",
    "package:minor": "vsce package --minor",
    "package:major": "vsce package --major",
    "build": "npm run compile && npm run package:auto",
    "package:auto": "echo y | vsce package",
    "build:clean": "npm run compile && echo y | vsce package --out axon-$(date +%Y%m%d-%H%M%S).vsix"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@vscode/vsce": "^3.6.2",
    "typescript": "^4.9.4",
    "vsce": "^2.12.0"
  }
}